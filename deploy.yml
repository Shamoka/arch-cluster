---
- name: Create Vms
  
  hosts: all

  vars:
    all_nodes: "{{ nodes + storage_nodes }}"

  tasks:
    - name: Create directories
      file:
        state: directory
        path: "{{ item }}"
        mode: 0700
      loop:
        - "{{ project_path }}"
        - "{{ terraform_path }}"
        - "{{ cloudinit_path }}"
        - "{{ ssh_keys_path }}"

    - name: Create terraform tfvars
      template:
        src: templates/nodes.tfvars.j2
        dest: "{{ terraform_path }}/nodes.tfvars"

    - name: Create terraform plan
      copy:
        src: "{{ item }}"
        dest: "{{ terraform_path }}"
      loop:
        - arch.tf
        - nodes.tf
        - storage_nodes.tf

    - name: Generate ssh keys
      openssh_keypair:
        path: "{{ ssh_keys_path }}/id_{{ item.name }}_rsa"
        type: rsa
        size: 4096
      loop: "{{ all_nodes }}"
      register: keys

    - name: Create user-data for cloud init
      template:
        src: templates/user-data.j2
        dest: "{{ cloudinit_path }}/user-data-{{ item.name }}"
      loop: "{{ all_nodes }}"

    - name: Create meta-data for cloud init
      template:
        src: templates/meta-data.j2
        dest: "{{ cloudinit_path }}/meta-data-{{ item.name }}"
      loop: "{{ all_nodes }}"

    - name: Create network-config for cloud init
      template:
        src: templates/network-config.j2
        dest: "{{ cloudinit_path }}/network-config-{{ item.name }}"
      loop: "{{ all_nodes }}"

    - name: Deploy
      terraform:
        project_path: "{{ terraform_path }}"
        state: present
        variables_file: nodes.tfvars
        force_init: yes
      register: tf_out

    - name: Write VM inventory
      template:
        src: virtual.j2
        dest: "{{ project_path }}/virtual"
