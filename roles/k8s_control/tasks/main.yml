---
- name: Install required packages
  pacman:
    name: "{{ packages }}"
    state: present
  become: yes

- name: Check if cluster exists
  stat:
    path: /home/kube/.kube
  register: stat_ret
  become: yes

- name: Init cluster
  block:
  - name: kubeadm init
    command: "kubeadm init --pod-network-cidr={{ pod_network_cidr }} \
              --ignore-preflight-errors all"

  - name: Create .kube directory for cluster admin
    file:
      state: directory
      mode: 0700
      owner: kube
      group: kube
      path: /home/kube/.kube

  - name: Copy cluster config to kube user directory
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/kube/.kube/config
      mode: 0600
      owner: kube
      group: kube
      remote_src: yes
  become: yes
  when: not (stat_ret.stat.isdir is defined and stat_ret.stat.isdir)

- name: Deploy calico pod network
  k8s:
    state: present
    definition: "{{ lookup('template', 'calico.yaml.j2') }}"
    apply: yes
  become: yes
  become_user: kube

- name: Deploy Metallb
  k8s:
    state: present
    definition: "{{ lookup('file', 'metallb.yaml') }}"
    apply: yes
  become: yes
  become_user: kube
  run_once: yes

- name: Deploy Metallb config
  k8s:
    state: present
    definition: "{{ lookup('template', 'metallb-config.yml.j2') }}"
    apply: yes
  become: yes
  become_user: kube
  run_once: yes

- name: Create persistent volumes service and endpoint
  k8s:
    state: present
    definition: "{{ lookup('template', 'gluster-endpoints.yml.j2') }}"
    apply: yes
  become: yes
  become_user: kube
  run_once: yes

- name: Create persitent volumes
  k8s:
    state: present
    definition: "{{ lookup('template', 'gluster-pv.yml.j2') }}"
    apply: yes
  loop: "{{ hostvars[groups['storage'][0]]['storage']['layout'] }}"
  become: yes
  become_user: kube
  run_once: yes

- name: Get node list
  k8s_info:
    kind: Node
  register: node_list
  become: yes
  become_user: kube
  run_once: yes

- name: Get join command
  command: "kubeadm token create --print-join-command"
  become: yes
  register: join_command
  run_once: yes
